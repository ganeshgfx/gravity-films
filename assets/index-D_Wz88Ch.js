import{c as m,f as P,h as u,G as h,J as r,o as x}from"./index-D8mYNnSp.js";import{P as M}from"./ParticlesInteractorBase-DadsftoB.js";const v=.5,C=10,S=0;function f(e,i,o,t,s,n){const d=m(e.options.collisions.absorb.speed*s.factor/C,S,t);e.size.value+=d*v,o.size.value-=d,t<=n&&(o.size.value=0,o.destroy())}function k(e,i,o,t){const s=e.getRadius(),n=i.getRadius();s===void 0&&n!==void 0?e.destroy():s!==void 0&&n===void 0?i.destroy():s!==void 0&&n!==void 0&&(s>=n?f(e,s,i,n,o,t):f(i,n,e,s,o,t))}const b=e=>{e.collisionMaxSpeed===void 0&&(e.collisionMaxSpeed=h(e.options.collisions.maxSpeed)),e.velocity.length>e.collisionMaxSpeed&&(e.velocity.length=e.collisionMaxSpeed)};function g(e,i){P(u(e),u(i)),b(e),b(i)}function w(e,i){!e.unbreakable&&!i.unbreakable&&g(e,i),e.getRadius()===void 0&&i.getRadius()!==void 0?e.destroy():e.getRadius()!==void 0&&i.getRadius()===void 0?i.destroy():e.getRadius()!==void 0&&i.getRadius()!==void 0&&(e.getRadius()>=i.getRadius()?i:e).destroy()}function z(e,i,o,t){switch(e.options.collisions.mode){case r.absorb:{k(e,i,o,t);break}case r.bounce:{g(e,i);break}case r.destroy:{w(e,i);break}}}const B=2;class q extends M{constructor(i){super(i)}clear(){}init(){}interact(i,o){if(i.destroyed||i.spawning)return;const t=this.container,s=i.getPosition(),n=i.getRadius(),d=t.particles.quadTree.queryCircle(s,n*B);for(const a of d){if(i===a||!a.options.collisions.enable||i.options.collisions.mode!==a.options.collisions.mode||a.destroyed||a.spawning)continue;const c=a.getPosition(),l=a.getRadius();if(Math.abs(Math.round(s.z)-Math.round(c.z))>n+l)continue;const y=x(s,c),R=n+l;y>R||z(i,a,o,t.retina.pixelRatio)}}isEnabled(i){return i.options.collisions.enable}reset(){}}async function A(e,i=!0){await e.addInteractor("particlesCollisions",o=>Promise.resolve(new q(o)),i)}export{A as loadParticlesCollisionsInteraction};
