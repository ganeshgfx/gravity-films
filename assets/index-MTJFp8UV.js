import{T as g,F as r,U as l,G as f,m as a,L as c}from"./index-CYG0GMNj.js";class L extends g{constructor(){super(),this.sync=!1}load(e){e&&(super.load(e),e.sync!==void 0&&(this.sync=e.sync))}}class R extends g{constructor(){super(),this.sync=!1}load(e){e&&(super.load(e),e.sync!==void 0&&(this.sync=e.sync))}}class F{constructor(){this.count=0,this.delay=new L,this.duration=new R}load(e){e&&(e.count!==void 0&&(this.count=e.count),this.delay.load(e.delay),this.duration.load(e.duration))}}const u=0,V=-1,y=0,m=0;function x(n,e,t){if(!n.life)return;const i=n.life;let s=!1;if(n.spawning)if(i.delayTime+=e.value,i.delayTime>=n.life.delay)s=!0,n.spawning=!1,i.delayTime=u,i.time=u;else return;if(i.duration===V||n.spawning||(s?i.time=u:i.time+=e.value,i.time<i.duration))return;if(i.time=u,n.life.count>y&&n.life.count--,n.life.count===y){n.destroy();return}const T=r(m,t.width),v=r(m,t.width);n.position.x=l(T),n.position.y=l(v),n.spawning=!0,i.delayTime=u,i.time=u,n.reset();const d=n.options.life;d&&(i.delay=f(d.delay.value)*a,i.duration=f(d.duration.value)*a)}const o=0,h=1,w=-1;class O{constructor(e){this.container=e}init(e){const t=this.container,i=e.options,s=i.life;s&&(e.life={delay:t.retina.reduceFactor?f(s.delay.value)*(s.delay.sync?h:c())/t.retina.reduceFactor*a:o,delayTime:o,duration:t.retina.reduceFactor?f(s.duration.value)*(s.duration.sync?h:c())/t.retina.reduceFactor*a:o,time:o,count:s.count},e.life.duration<=o&&(e.life.duration=w),e.life.count<=o&&(e.life.count=w),e.life&&(e.spawning=e.life.delay>o))}isEnabled(e){return!e.destroyed}loadOptions(e,...t){e.life||(e.life=new F);for(const i of t)e.life.load(i==null?void 0:i.life)}update(e,t){!this.isEnabled(e)||!e.life||x(e,t,this.container.canvas.size)}}async function b(n,e=!0){await n.addParticleUpdater("life",async t=>Promise.resolve(new O(t)),e)}export{b as loadLifeUpdater};
