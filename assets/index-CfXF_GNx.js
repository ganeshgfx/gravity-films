import{s as d,G as r,t as l,_ as u,$ as c}from"./index-D8mYNnSp.js";const m=1;class f{constructor(o){this.container=o}init(o){var a;const n=this.container,e=o.options,t=d(e.stroke,o.id,e.reduceDuplicates);o.strokeWidth=r(t.width)*n.retina.pixelRatio,o.strokeOpacity=r(t.opacity??m),o.strokeAnimation=(a=t.color)==null?void 0:a.animation;const i=l(t.color)??o.getFillColor();i&&(o.strokeColor=u(i,o.strokeAnimation,n.retina.reduceFactor))}isEnabled(o){const n=o.strokeAnimation,{strokeColor:e}=o;return!o.destroyed&&!o.spawning&&!!n&&((e==null?void 0:e.h.value)!==void 0&&e.h.enable||(e==null?void 0:e.s.value)!==void 0&&e.s.enable||(e==null?void 0:e.l.value)!==void 0&&e.l.enable)}update(o,n){this.isEnabled(o)&&c(o.strokeColor,n)}}async function g(s,o=!0){await s.addParticleUpdater("strokeColor",n=>Promise.resolve(new f(n)),o)}export{g as loadStrokeColorUpdater};
